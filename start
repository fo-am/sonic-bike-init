#!/bin/sh
## Finding Song Home embedded system for Kaffe Matthews
## Copyright (C) 2015 Tom Keene
## 
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program. If not, see <http://www.gnu.org/licenses/>.

# Script auto-called via systemd on boot

# The configeration file
CONFIG="/home/pi/stick/config.json"

# Make sure this script is runs as root so network/mount things work
LUID=$(id -u)
if [ $LUID -ne 0 ]; then
    echo "[start] $o must be run as root"
    exit 1
fi

# Check if we need to mount the SDcard/USB stick Note: Could be manged by fstab...
if [ -f $CONFIG ]; then
    # File exists
    echo "[start] Found: $CONFIG"
else
    # File doesn't exist so try mounting the sdcard/USB stick
    # mount -t vfat -o defaults,rw,umask=0 /dev/mmcblk0p1 /home/sonic/sdcard
    # For beagleboard xM:
    mount /dev/sda1 /home/pi/stick # -o umask=000
fi

# Where should we log startup messages?
LOGFILE=$(grep '"logfile"' /home/pi/stick/config.json | cut -d '"' -f4)

# Which mode (app) should we startup?
MODE=$(grep '"mode"' $CONFIG | cut -d '"' -f4)
echo "[start] Found mode: $MODE" 

# Make sure we can write to the SDcard/USB stick (sorry - dirty fix!)
chmod 777 /home/pi/stick -R

# Setup the soundcard. Needs a little time before volume can be set
#sleep 1
#amixer -c 0 set PCM 100% > /dev/null  # Set initital audio volume to full

# SELECT WHICH MODE (Application) TO LOAD: This is set in the config file on the sd card
if [ X"$MODE" = X"app-kayak" ]; then
    cd /home/pi/app-kayak/src
    echo "[start] Load app-findingsong" >> $LOGFILE
    cd /home/pi/app-kayak/sensors/gps
    supervise . & 
    cd /home/pi/app-kayak/sensors/therm
    supervise . & 
    runuser -l pi -c 'cd app-kayak/audio_restarter; supervise .' &
    cd /home/pi/app-kayak/src
    ./swamp & 
    
elif [ X"$MODE" = X"app-findingsong" ]; then
    cd /home/pi/app-findingsong/src
    echo "[start] Load app-findingsong" >> $LOGFILE
    ./swamp & > /dev/null
elif [ X"$MODE" = X"app-swamp" ]; then
    cd /home/pi/app-swamp/src
    # Load the old system
    echo "[start] loaded oldschool system" >> $LOGFILE
    ./swamp & > /dev/null
else
    echo "--------------------startup error-----------------------" >> $LOGFILE
    echo "[start] No \"mode\" set. Edit the config and specify 'app-swamp' OR 'app-findingsong' mode " >> $LOGFILE
    echo "[start error] Nothing has started. Exited. $CONFIG \n" >> $LOGFILE
    echo "[start error] No mode set in '$CONFIG': normal OR random" >> $LOGFILE
fi

